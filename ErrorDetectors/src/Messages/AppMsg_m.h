//
// Generated file, do not edit! Created by nedtool 5.5 from Messages/AppMsg.msg.
//

#ifndef __APPMSG_M_H
#define __APPMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
  
    #include "../structures.h"    
    #include <vector> 
    #include "../Clocks/ProbabilisticClock.h"
    typedef idMsg idMsgAppMsg;
    typedef std::vector<idMsg> AppMsgFalseDep;
    typedef std::vector<idMsg> AppMsgDep;
    typedef ProbabilisticClock AppMsgPC;
    typedef omnetpp::simtime_t AppMsgTime;
// }}

/**
 * Class generated from <tt>Messages/AppMsg.msg:48</tt> by nedtool.
 * <pre>
 * packet AppMsg
 * {
 *     idMsgAppMsg id;
 *     AppMsgPC PC;
 *     unsigned long hash;
 *     AppMsgTime delay; // ms 
 *     AppMsgFalseDep falseDependencies;
 *     AppMsgDep dependencies;
 * }
 * </pre>
 */
class AppMsg : public ::omnetpp::cPacket
{
  protected:
    idMsgAppMsg id;
    AppMsgPC PC;
    unsigned long hash;
    AppMsgTime delay;
    AppMsgFalseDep falseDependencies;
    AppMsgDep dependencies;

  private:
    void copy(const AppMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppMsg&);

  public:
    AppMsg(const char *name=nullptr, short kind=0);
    AppMsg(const AppMsg& other);
    virtual ~AppMsg();
    AppMsg& operator=(const AppMsg& other);
    virtual AppMsg *dup() const override {return new AppMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual idMsgAppMsg& getId();
    virtual const idMsgAppMsg& getId() const {return const_cast<AppMsg*>(this)->getId();}
    virtual void setId(const idMsgAppMsg& id);
    virtual AppMsgPC& getPC();
    virtual const AppMsgPC& getPC() const {return const_cast<AppMsg*>(this)->getPC();}
    virtual void setPC(const AppMsgPC& PC);
    virtual unsigned long getHash() const;
    virtual void setHash(unsigned long hash);
    virtual AppMsgTime& getDelay();
    virtual const AppMsgTime& getDelay() const {return const_cast<AppMsg*>(this)->getDelay();}
    virtual void setDelay(const AppMsgTime& delay);
    virtual AppMsgFalseDep& getFalseDependencies();
    virtual const AppMsgFalseDep& getFalseDependencies() const {return const_cast<AppMsg*>(this)->getFalseDependencies();}
    virtual void setFalseDependencies(const AppMsgFalseDep& falseDependencies);
    virtual AppMsgDep& getDependencies();
    virtual const AppMsgDep& getDependencies() const {return const_cast<AppMsg*>(this)->getDependencies();}
    virtual void setDependencies(const AppMsgDep& dependencies);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __APPMSG_M_H

